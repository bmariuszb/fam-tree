<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<title>Family tree</title>
		<style>
			body {
				height: 100%;
				width: 100%;
			}
			table {
				border-collapse: collapse;
				border: 1px solid black;
			}
			td, th {
				border: 1px solid black;
				text-align: center;
				padding: 10px;
			}
			div > * {
			  margin: 10px;
			}
			@-moz-document url-prefix() {
			   .fix_height {
					height: 100%;
				}
			}
		</style>
		<script src="https://unpkg.com/vis-network/standalone/umd/vis-network.min.js"></script>
	</head>
	<body>
		<table style="margin: 0; width: 98.5%;"><td>
			<table style="border: 0; margin: auto;">
				<td style="border: 0;">
					<form action="/new-person" method="GET">
						<button type="submit">New Person</button>
					</form>
				</td>
				<td style="border: 0;">
					<form action="/new-relation" method="GET">
						<button type="submit">New Relation</button>
					</form>
				</td>
				<td style="border: 0;">
					<form action="/search-relations" method="GET">
						<button type="submit">Search Relations</button>
					</form>
				</td>
			</table>
		<table style="margin: auto;">
			<thead>
				<tr>
					<th colspan="4">Persons</th>
				</tr>
				<tr>
					<th>First Name</th>
					<th>Last Name</th>
					<th colspan="2">Actions</th>
				</tr>
			</thead>
			<tbody>
				<% for (let person of locals.persons) { %>
					<tr>
						<td><%= person.first_name %></td>
						<td><%= person.last_name %></td>
						<td>
							<form action="/update-person" method="GET">
							<input type="hidden" name="first_name" value="<%= person.first_name %>">
							<input type="hidden" name="last_name" value="<%= person.last_name %>">
							<button type="submit">Change</button>
							</form>
						</td>
						<td>
							<form action="/delete-person" method="POST">
							<input type="hidden" name="first_name" value="<%= person.first_name %>">
							<input type="hidden" name="last_name" value="<%= person.last_name %>">
							<button type="submit">Delete</button>
							</form>
						</td>
					</tr>
				<% } %>
			</tbody>
		</table>
		<table>
			<thead>
				<tr>
					<th colspan="5">Relations</th>
				</tr>
				<tr>
					<th>Full Name</th>
					<th>Relation type</th>
					<th>Full Name</th>
					<th colspan="2">Actions</th>
				</tr>
			</thead>
			<% for (let relation of locals.relations) { %>
				<tr>
					<td><%= relation.person1_first_name %> <%= relation.person1_last_name %></td>
					<td>---<%= relation.relation %>--></td>
					<td><%= relation.person2_first_name %> <%= relation.person2_last_name %></td>
					<td>
						<form action="/update-relation" method="GET">
							<input type="hidden" name="person2_first_name" value="<%= relation.person1_first_name %>">
							<input type="hidden" name="person2_last_name" value="<%= relation.person1_last_name %>">
							<input type="hidden" name="person1_first_name" value="<%= relation.person2_first_name %>">
							<input type="hidden" name="person1_last_name" value="<%= relation.person2_last_name %>">
							<input type="hidden" name="relation" value="<%= relation.relation %>">
							<button type="submit">Change</button>
						</form>
					</td>
					<td>
						<form action="/delete-relation" method="POST">
							<input type="hidden" name="person2_first_name" value="<%= relation.person1_first_name %>">
							<input type="hidden" name="person2_last_name" value="<%= relation.person1_last_name %>">
							<input type="hidden" name="person1_first_name" value="<%= relation.person2_first_name %>">
							<input type="hidden" name="person1_last_name" value="<%= relation.person2_last_name %>">
							<input type="hidden" name="relation" value="<%= relation.relation %>">
							<button type="submit">Delete</button>
						</form>
					</td>
				</tr>
			<% } %>
		</table>
			</td>
			<td style="padding: 0;">
				<div style="height: 100%; display: flex; align-items: flex-start;" id="graph"></div>
			</td></table>
		<script type="text/javascript">
			const data = <%- JSON.stringify(data) %>;
			const nodes = data.nodes.map(node => ({
				id: node.id,
				label: node.first_name + " " + node.last_name
			}));
			const edges = data.relationships.map(relationship => ({
				from: relationship.source,
				to: relationship.target,
				label: relationship.type
			}));

			var graph = {
				nodes: nodes,
				edges: edges,
				};
			const options = {
				edges: {
					arrows: 'to',
					length: 300,
					smooth: {
						roundness: 0.2,
						type: 'dynamic'
					},
				},
				height: '1074px',
			};

			var container = document.getElementById("graph");
			const network = new vis.Network(container, graph, options);
			network.fit();
		</script>
	</body>
</html>
